정규화 : 갱신이상을 예방하기위해 테이블을 분해하는것
갱신이상  - 중복 : 동일정보를 두곳이상 저장
	-수정 : 데이터 일부만 변경되어 불일치발생
	-삽입 : 불필요정보를 입력해야 저장가능한것
	-삭제 : 유용정보까지 삭제해야 삭제가 가능한것

릴레이션 분해는 원래의 릴레이션을 구할수있도록 분해
함수의 종속성 :  결정자에 의한 종속성

완전함수적 종속성 : 복합키일경우 일부가 함수의 종속성을 가지면 부분 함수적 종속성이된다
이행적 함수적 종속성 :  A->B B->C 인경우
무손실 분해: 조인시 원래 릴레이션을 얻을수있는 분해
정보의 손실 : 원래보다 많거나 적은

제1정규형 : 모든 애트리뷰트가 원자값만 가진다 , 기본키 설정;
제2정규형 완전 함수적 종속성으로 만들기
제3정규형 이행적 함수적 종속성 게거
BCNF : 후보키가 아닌 결정자 제거

ERD 	vs 	정규화
하향식		상향식
요구사항		기존의 데이터를 조사
비즈니스 지식이 필요 수학을 기반

역정규화 : 조인성능이 떨어질때 역정규화 시행  

View : 유도된 릴레이션  복잡한 길의를 간단하게 표현하는 수단으로 데이터 독립성을 높이기 위해서 사용한다.
동적인 창,
스냅숏

create view 이름(애트리뷰트 ) as select문 with check option
drop view 뷰이름;

뷰의 장점 :  복잡한 질의를 간단하게 표현할수있게 한다.
	데이터 무결성을 보장하는데 활용 with check option
	데이터 독립성 제공한다 
	보안 기능 제공
	여러가지 뷰제공

갱신 불가능한 뷰 : 	기본키가 포함되지않은 뷰
		not null 어트리뷰트가 포함되지않은 뷰
		집단함수가 포함된 뷰
		조인으로 정의된 뷰

시스템 카탈로그  = 메타데이터 =데이터 사전
DBA_xxx DB의 모든 객체에 관한 정보
ALL_ xxx 현재의 사용자가 접근할수잇는 객체에 관한 정보
USER_xxx 현재의 사용자가 소유한 객체에 관한 정보

Analyze index empdno_idx compute statistics;
통계정보 갱신

트랜젝션 :  동시성제어와 회복기법
트랜젝션 특성 : 원자성,일관성 ,고립성, 지속성

commit rollback

트랜젝션 성공하지 못하는 원인
-시스템고장
-트랜젝션고장
-매체고장
-통신고장
-자연적재해
-부주의

동시성제어 : 직렬 스케줄 ,비직렬스케줄
갱신손실,오손데이터읽기,반복할수없는읽기

로킹 : 트랜젝션의 동시접근을 막기위한것
독점로크 : 갱신을 목적으로 데이터항목을 접근할때
공유로크 : 읽을 목적

2단계 로킹 프로토콜 : 확장단계 -> 수축단계
데드락
다중로크단위 DB -> 릴레이션 -> 블록/페이지 -> 레코드/투플
단위가 작을수록 오버헤드 증가,  병렬성 증가

팬텀문제

회복  : 즉시갱신 , 지연갱신 , 그림자페이징
안전저장장치
디스크 고장 DB룰 읽을수없는 고장 재해적 고장
비재해적 고장
이중로그
점진적인 백업 : 갱신된 내용만 백업

디스크 -> M input , M->디스크 output
응용과 메모리 Write, Read